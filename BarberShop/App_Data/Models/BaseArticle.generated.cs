//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1073 with alias "baseArticle"
	/// <summary>Base Article</summary>
	public partial interface IBaseArticle : IPublishedContent
	{
		/// <summary>Article cover image</summary>
		IPublishedContent ArticleCoverImage { get; }

		/// <summary>Content</summary>
		IHtmlString Content { get; }

		/// <summary>Headline</summary>
		string Headline { get; }

		/// <summary>Link button</summary>
		string LinkButton { get; }
	}

	/// <summary>Base Article</summary>
	[PublishedContentModel("baseArticle")]
	public partial class BaseArticle : PublishedContentModel, IBaseArticle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseArticle";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseArticle(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseArticle, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Article cover image: Full size image
		///</summary>
		[ImplementPropertyType("articleCoverImage")]
		public IPublishedContent ArticleCoverImage
		{
			get { return GetArticleCoverImage(this); }
		}

		/// <summary>Static getter for Article cover image</summary>
		public static IPublishedContent GetArticleCoverImage(IBaseArticle that) { return that.GetPropertyValue<IPublishedContent>("articleCoverImage"); }

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("content")]
		public IHtmlString Content
		{
			get { return GetContent(this); }
		}

		/// <summary>Static getter for Content</summary>
		public static IHtmlString GetContent(IBaseArticle that) { return that.GetPropertyValue<IHtmlString>("content"); }

		///<summary>
		/// Headline
		///</summary>
		[ImplementPropertyType("headline")]
		public string Headline
		{
			get { return GetHeadline(this); }
		}

		/// <summary>Static getter for Headline</summary>
		public static string GetHeadline(IBaseArticle that) { return that.GetPropertyValue<string>("headline"); }

		///<summary>
		/// Link button
		///</summary>
		[ImplementPropertyType("linkButton")]
		public string LinkButton
		{
			get { return GetLinkButton(this); }
		}

		/// <summary>Static getter for Link button</summary>
		public static string GetLinkButton(IBaseArticle that) { return that.GetPropertyValue<string>("linkButton"); }
	}
}
